@page "/"
@using FrontEnd.Data

@inject WebPagesDetailsHttpClient WebPagesDetailClient

<PageTitle>Web Pages</PageTitle>

<h1>Multiple Web Pages</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (webPagesDetails == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>File downloaded</th>
                <th>Web Page Title</th>
                <th>URL</th>
                <th>Web Page String</th>
            </tr>
        </thead>
        <tbody>
             @foreach (var webPageDetail in webPagesDetails)
            {
                <tr>
                    <td>
                          @if (@webPageDetail.WebPageString == "File download Completed!") 
                            {
                                <span>true</span>; 
                            } 
                            else if (@webPageDetail.WebPageString == "File download Failed") 
                            {
                                <span>false</span>; 
                            } 
                            else 
                            {
                                <span>false</span>; 
                            }
                    </td>

                    <td>@webPageDetail.WebPageTitle</td>
                    <td>@webPageDetail.WebPageURL</td>
                    <td>@webPageDetail.WebPageString</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WebPagesDetails[]? webPagesDetails;

    protected override async Task OnInitializedAsync()
    {
        webPagesDetails = new List<WebPagesDetails>(){
                new WebPagesDetails(){
                    WebPageTitle = "VC-WeatherData", 
                    WebPageURL = "https://www.visualcrossing.com/weather-data/", 
                    WebPageString = await WebPagesDetailClient.GetWebPageStringAsync("https://www.visualcrossing.com/weather-data/", "VC-WeatherData")
                    },
                new WebPagesDetails(){
                    WebPageTitle = "VC-Pricing", 
                    WebPageURL = "https://www.visualcrossing.com/weather-data-editions/", 
                    WebPageString = await WebPagesDetailClient.GetWebPageStringAsync("https://www.visualcrossing.com/weather-data-editions/", "VC-Pricing")
                    },

                new WebPagesDetails(){
                    WebPageTitle = "VC-QueryBuilder", 
                    WebPageURL = "https://www.visualcrossing.com/weather-query-builder/", 
                    WebPageString = await WebPagesDetailClient.GetWebPageStringAsync("https://www.visualcrossing.com/weather-query-builder/", "VC-QueryBuilder")
                }            
            }.ToArray();
    }
}
